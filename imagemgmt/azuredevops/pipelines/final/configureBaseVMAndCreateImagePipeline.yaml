# Pipeline to do the following:
# - Power on the base VM, if required
# - Run Windows Update on the VM
# - Configure the VM
# - Install applications
# - Shutdown the VM
#
# Author : Mitush Yadav
# https://github.com/MitushYadav

trigger: none

pool:
  # or use a self hosted pool
  vmImage: 'windows-latest'

variables:
  # add the following 2 variables as pipeline editor variables, for security
  #armConnection: ''
  #subscriptionId: ''
  # specify the resource group name containing the base VM
  rgName: ''
  # specify the name of the base VM
  baseVmName: ''
  # specify the location of the resources, generally the resource group location
  location: ''

steps:
# Power on the VM, if not already powered on
- task: AzurePowerShell@5
  inputs:
    azureSubscription: $(armConnection)
    ScriptType: 'InlineScript'
    Inline: |
      Start-AzVM -ResourceGroupName $(rgName) -Name $(baseVmName)
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'

# Add steps to configure Windows and install/remove applications, as required.

# run Windows Update on the VM
# Install the PS module PSWindowsUpdate and update Windows. As of now, this script only works correctly on windows client OS, including multi session.
- task: AzurePowerShell@5
  inputs:
    azureSubscription: $(armConnection)
    ScriptType: 'InlineScript'
    Inline: |
      $localScriptPath = "$(Build.Repository.LocalPath)\ApplyWindowsUpdates.ps1"
      Invoke-AzVMRunCommand -ResourceGroupName $(rgName) -Name $(baseVmName) -CommandId 'RunPowerShellScript' -ScriptPath $localScriptPath
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'

# add steps to install required applications(FSLogix, LOB apps, etc). Reboot after this.

# Reboot the VM, if required
- task: AzurePowerShell@5
  inputs:
    azureSubscription: $(armConnection)
    ScriptType: 'InlineScript'
    Inline: |
      Restart-AzVM -ResourceGroupName $(rgName) -Name $(baseVmName)
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'

# Power off the VM
- task: AzurePowerShell@5
  inputs:
    azureSubscription: $(armConnection)
    ScriptType: 'InlineScript'
    Inline: |
      Stop-AzVM -ResourceGroupName $(rgName) -Name $(baseVmName) -Force
    FailOnStandardError: true
    azurePowerShellVersion: 'LatestVersion'